name: Build

on:
  workflow_dispatch:

  pull_request:
    branches:
    - main

jobs:
  build-native:
    strategy:
      matrix:
        target:
          - name: linux 64 bits
            buildid: linux
            os: ubuntu-latest
            artifact: iast-rewriter.linux-x64-gnu
          - name: windows 64 bits
            buildid: windows
            os: windows-latest
            artifact: iast-rewriter.win32-x64-msvc
          - name: macos 64 bits
            buildid: darwin
            os: macos-latest
            artifact: iast-rewriter.darwin-x64
                        
    runs-on: ${{ matrix.target.os }}
    steps:
      - uses: actions/checkout@v2
      - uses: actions/setup-node@v2
        with:
          node-version: '16'
          architecture: ${{ matrix.target.arch }}
      - run: npm ci --ignore-scripts
      - run: npm run buildAndTest:${{ matrix.target.buildid }}
      - uses: actions/upload-artifact@v2
        with:
          name: ${{ matrix.target.artifact }}
          path: ${{ matrix.target.artifact }}.node
    
  build-docker:
    runs-on: ubuntu-latest
    strategy:
      matrix:
        target:
          - name: alpine 64 bits
            dockerfile: alpine.Dockerfile
            artifact: iast-rewriter.linux-x64-musl
    steps:
      - uses: actions/checkout@v2
      - uses: actions/setup-node@v2
        with:
          node-version: '16'
      - run: docker build -t build -f ./docker/${{ matrix.target.dockerfile }} .
      - run: docker run --name builder build
      - run: docker cp builder:/build/${{ matrix.target.artifact }}.node .
      - uses: actions/upload-artifact@v2
        with:
          name: ${{ matrix.target.artifact }}
          path: ${{ matrix.target.artifact }}.node

  static-checks:
    strategy:
      matrix:
        run:
          - lint
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2
      - uses: actions/setup-node@v2
      - run: npm ci
      - run: npm run ${{ matrix.run }}

  pack:
    needs: ['build-native', 'build-docker']
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2
      - uses: actions/setup-node@v2
        with:
          node-version: '16'
      - uses: actions/download-artifact@v2
        with:
          path: artifacts
      - run: npm ci --ignore-scripts          
      - run: npm run artifacts
      - run: npm pack
      - run: npm pack npm/linux-x64-gnu/
      - run: npm pack npm/linux-x64-musl/
      - run: npm pack npm/win32-x64-msvc/
      - run: npm pack npm/darwin-x64/      
      - uses: actions/upload-artifact@v2
        with:
          name: datadog-native-iast-rewriter files Pack
          path: '*.tgz'

  all-good:
    needs: ['static-checks', 'pack']
    runs-on: ubuntu-latest
    steps:
      - run: echo 'ðŸš€ðŸš€ðŸš€ðŸš€ðŸš€'
