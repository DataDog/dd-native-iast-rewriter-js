name: Release

env:
  ARTIFACT_NAME: datadog-wasm-js-rewriter

on:
  push:
    tags:
      - 'v[0-9]+.[0-9]+.[0-9]+'

jobs:
  build:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3
      - uses: actions/setup-node@v3
        with:
          node-version: '16'
      - run: |
          cargo install wasm-pack@0.10.3
          npm ci --ignore-scripts
          npm run build
          rm wasm/README.md wasm/package.json wasm/.gitignore
          npm pack
      - uses: codex-team/action-nodejs-package-info@v1.1
        id: package
      - uses: actions/upload-artifact@65c4c4a1ddee5b72f698fdd19549f0f0fb45cf08 # v4.6.0
        with:
          name: ${{ env.ARTIFACT_NAME }}-${{ steps.package.outputs.version }}
          path: '*.tgz'

  create_release:
    needs: build
    runs-on: ubuntu-latest
    environment: release
    permissions:
      contents: write
    steps:
      - uses: actions/checkout@v3
      - uses: codex-team/action-nodejs-package-info@v1.1
        id: package
      - uses: actions/download-artifact@fa0a91b85d4f404e444e00e005971372dc801d16 # v4.1.8
        with:
          name: ${{ env.ARTIFACT_NAME }}-${{ steps.package.outputs.version }}
      - uses: actions/create-release@v1
        id: create_release
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          tag_name: v${{ steps.package.outputs.version }}
          release_name: Release ${{ steps.package.outputs.version }}
          body: |
            Release
          draft: false
          prerelease: false
      - uses: actions/upload-release-asset@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          upload_url: ${{ steps.create_release.outputs.upload_url }}
          asset_path: ./${{ env.ARTIFACT_NAME }}-${{ steps.package.outputs.version }}.tgz
          asset_name: ${{ env.ARTIFACT_NAME }}-${{ steps.package.outputs.version }}
          asset_content_type: application/tar+gzip

  publish:
    needs: build
    runs-on: ubuntu-latest
    environment: npm
    permissions:
      id-token: write
    env:
      NODE_AUTH_TOKEN: ${{ secrets.NPM_TOKEN }}
    steps:
      - uses: actions/checkout@v3
      - uses: codex-team/action-nodejs-package-info@v1.1
        id: package
      - uses: actions/download-artifact@fa0a91b85d4f404e444e00e005971372dc801d16 # v4.1.8
        with:
          name: ${{ env.ARTIFACT_NAME }}-${{ steps.package.outputs.version }}
      - uses: actions/setup-node@v3
        with:
          registry-url: 'https://registry.npmjs.org'
      - run: npm publish --access=public ./${{ env.ARTIFACT_NAME }}-${{ steps.package.outputs.version }}.tgz --provenance
